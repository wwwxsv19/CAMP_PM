#include <stdio.h>
#define MAX 100

typedef struct Stack{
	char str[MAX];
	int top;
}Stack;

void initStack(Stack *s){
	s->top = -1;
}

int isFull(Stack *s){
	return s->top == MAX-1;
}

int isEmpty(Stack *s){	
	return s->top == -1;
}

void push(Stack* s, char c){
	if(isFull(s)){
		printf("FULL");
	}
	else{
		s->top++;
		s->str[s->top] = c;
	}
}

char pop(Stack *s){
	char temp;
	if(isEmpty(s)){
		printf("EMPTY");
		return 0;
	}
	temp = s->str[s->top];
	s->top--;
	return temp;
}

int palindrome(char string[]){
	Stack S;
	int i;
	initStack(&S);
	
	for(i=0; string[i]!='\0'; i++){
		if(string[i] >= 'A' && string[i] <= 'Z') string[i] += 'a'-'A';
		push(&S, string[i]);
	}
	
	for(i=0; string[i]!='\0';i++){
		char c = pop(&S);
		printf("string[%d] : %c, pop(&S) = %c\n", i, string[i], c);
		if(string[i] != c) 
			return 0;
	}
	return 1;
}

int main(void){
	char str[MAX];
	scanf("%s", str);
	
	if(palindrome(str)) printf("TRUE");
	else printf("FALSE");
	return 0;
}